*필터(Filter)
필터는 서블릿 실행 전후에 어떤 작업을 하고자 할 때 
사용하는 기술이다.
예를 들면 클라이언트가 보낸 데이터의 암호를 해제한다거나, 서블릿이 실행되기 전에
필요한 자원을 미리 준비한다거나, 서블릿이 실행될 때마다 로그를 남긴다거나 
하는 작업을 필터를 통해 처리할 수 있다

필터는 기본적으로 특정 요청에만 동작하며,
여러 개의 필터가 정해진 순서에 따라 배치될 수 있는데
클라이언트 요청 처리 이전에 먼저 실행된다.
필터는 기존 코드의 변경 없이 애플리케이션에서 공통적으로 사용할 수 있는 기능 구현에
널리 사용된다

대표적으로 활용되는 분야
-인증, 로깅/감사, 국제화, 한글 인코딩 처리 등




==========================
*All in one 방식
서블릿 하나에서 모든 로직을 다 처리하는 방식
모든 기능이 하나의 클래스에 들어가 있어 빠르고 작업하기 편리한 장점이 있다
단점은 특정 로직을 변경하고 싶을 때 어디에서 문제가 발생하고 변경해야 할지
찾기 어려우며 특정 기능만 수정하기 어렵다는 것이다
올인원의 경우 목적이 거의 변하지 않고 명확하다면 올인원도 나쁜 선택은 아니다
유지 비용이 적게 든다
의사 결정이 빠르다
맡은 업무가 마비되면 전체에 문제가 생긴다
내용이 많아지면 작업이 거의 불가능하다
*요약: 현재의 글로벌 프로그램 개발에는 적합하지 않다

*MVC 패턴
위와 거의 반대
*요약: 현재의 글로벌 프로그램 개발에 적합하다(분업이 가능하다)


**JSP 전용 태그
지시자(Directive)
<%@ 지시자 %>
jsp 전용 태그로 지시자나 속성에 따라 특별한 자바 코드를 생성한다
jsp 지시자에는 page, taglib, include가 있다

<%@ 지시자 속성="값" 속성="값" ,,,,%>
jsp 페이지와 관련된 속성을 정의할 때 사용하는 태그이다
language 속성
스크립트릿이나 표현식, 선언부를 작성할 때 사용할 프로그래밍 언어를 지정한다

대소문자를 구분한다

contentType 속성
출력할 데이터의 MIME 타입과 문자 집합을 지정한다

text/html은 출력할 데이터가 HTML 텍스트임을 가리킨다

pageEncoding 속성
출력할 데이터의 문자 집합을 지정한다
기본값은 ISO-8859-1이다.

*스크립트릿(Scriptlet Element)
<% %>
JSP 페이지 안에 자바 코드를 넣을 때는 스크립트릿 태그 안에
작성한다. 스크립틀릿 태그 안에 작성한 내용은 서블릿 파일을 만들 때 그대로 복사된다

*JSP 기본 객체
Implicit Object라고도 부른다.
request, response, pageContext, session, application, config, out,
page, exception 객체가 존재한다

별도의 선언없이 바로 사용할 수 있다

*선언문(Declaration)
<%! %>
선언문은 서블릿 클래스의 멤버를 선언할 때 사용하는 태그이다

선언문의 위치는 어디든 상관없다
(몰라도 된다, 사용안함)

*표현식(Expression)
<%= %>
표현식 태그는 문자열을 출력할 때 사용한다
다라서 표현식 안에는 결과를 반환하는 자바 코드가 와야 한다
<%=문자열을 반환하는 자바 코드 %>